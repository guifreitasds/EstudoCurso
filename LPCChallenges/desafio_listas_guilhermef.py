# -*- coding: utf-8 -*-
"""Desafio_Listas_GuilhermeF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/128bsxsW997HE99Ym4-HeZNJHyv4Uhlls
"""

# 1. Faça um Programa que leia um vetor de 5 números inteiros e mostre-os.

n = []

for i in range(1, 6):
  n1 = int(input(f'Digite o {i}º número: '))
  n.append(n1)

print(n)

# 2. Faça um Programa que leia um vetor de 10 números reais e mostre-os na ordem inversa.

n = []

for i in range(1, 11):
  n1 = float(input(f'Digite o {i}º número: '))
  n.append(n1)

sorted(n, reverse = True)

# 3. Faça um Programa que leia 4 notas, mostre as notas e a média na tela.

notas = []

for i in range(1, 5):
  n1 = float(input(f'Digite a {i}º nota: '))
  notas.append(n1)


print('Média = ' + str((sum(notas))/len(notas)))

# 4. Faça um Programa que leia um vetor de 10 caracteres, e diga quantas consoantes foram lidas. Imprima as consoantes.

char = []
cons = 0
conslist = []

for i in range(1, 11):
  c1 = str(input('Digite uma letra: '))
  char.append(c1)
  if c1 != 'a' and c1 != 'e' and c1 != 'i' and c1 != 'o' and c1 != 'u':
    cons = cons + 1
    conslist.append(c1)

print(f'A quantidade de consoantes é {cons}')
print(conslist)

# 5. Faça um Programa que leia 20 números inteiros e armazene-os num vetor. Armazene os números pares no vetor PAR e os números IMPARES no vetor impar. Imprima os três vetores.

numb = []
imp = []
par = []

for i in range(1, 21):
  n1 = int(input(f'Digite o {i} número: '))
  numb.append(n1)
  if n1 % 2 == 1:
    imp.append(n1)
  else: 
    par.append(n1)

print('Vetor dos 20 números: ', numb)
print('Vetor impar: ', imp)
print('Vetor par: ', par)

# 6. Faça um Programa que peça as quatro notas de 10 alunos, calcule e armazene num vetor a média de cada aluno, imprima o número de alunos com média maior ou igual a 7.0
notas = []
medias = []
mediasap = []
alapr = 0

for a in range(1, 11):
  media = 0
  notas = []
  print(f'Aluno {a}')
  for i in range(1, 5):
      notas.append(float(input(f'Digite a {i} nota do aluno {a}: ')))
      media = media + sum(notas)
      media = media/4
      if media >= 7:
        mediasap.append(media)
        medias.append(media)

print(f'O total de alunos aprovados foi {len(mediasap)}')

import numpy
# 7. Faça um Programa que leia um vetor de 5 números inteiros, mostre a soma, a multiplicação e os números.
from numpy import prod
numb = []

for i in range(1, 6):
  n1 = int(input(f'Digite o número {i} '))
  numb.append(n1)

multi = numpy.prod(numb)
print(f'A soma dos números é igual a {sum(numb)}')
print(f'A multiplicação dos números é igual a: {multi}')
print(numb)

# 8. Faça um Programa que peça a idade e a altura de 5 pessoas, armazene cada informação no seu respectivo vetor. Imprima a idade e a altura na ordem inversa a ordem lida.

age = []
height = []

for i in range(1, 6):
  a = int(input(f'Digite a idade da pessoa {i}: '))
  age.append(a)
  h = float(input(f'Digite a altura da pessoa {i} em metros: '))
  height.append(h)

nlist1 = list(reversed(age))
nlist2 = list(reversed(height))

print(nlist1)
print(nlist2)

# 9. Faça um Programa que leia um vetor A com 10 números inteiros, calcule e mostre a soma dos quadrados dos elementos do vetor.

numbers = []

for i in range(0, 10):
  n1 = int(input('Digite o número: '))
  result = n1 * n1
  numbers.append(result)

print(f'O resultado final é: {sum(numbers)}')

# 10. Faça um Programa que leia dois vetores com 10 elementos cada. Gere um terceiro vetor de 20 elementos, cujos valores deverão ser compostos pelos elementos intercalados dos dois outros vetores

numbers = []
numbers1 = []
numbersintercall = []

for i in range(0, 10):
  n1 = input('Digite algo: ')
  numbers.append(n1)

for a in range(0, 10):
  n2 = input('Digite algo: ')
  numbers1.append(n2)

for o in range(0, 10):
  numbersintercall.append(numbers[o])
  numbersintercall.append(numbers1[o])

print(numbersintercall)